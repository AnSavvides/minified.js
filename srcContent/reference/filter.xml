<?xml version="1.0" encoding="UTF-8"?>
<!--
   Auto-generated using docbuilder.js. Do not edit manually. 
-->
<page xmlns="http://tjansen.de/minifiedPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://tjansen.de/minifiedPage ../schemas/page.xsd ">
	<title>.filter() - Minified.js</title>
	<section>reference</section>
	<externalCss>../css/reference.css</externalCss>
	<main><![CDATA[
<div id="docmain"><p class="docHead"><a href="index.html" class="backOverview">back to Overview</a></p>
<h2><a name="doc-filter">.filter()</a></h2>
<div class="summary">Creates a new ##list#Minified list## that contains only those items approved by the given callback function.</div>

<h4>Syntax</h4>
<div class="syntaxVariant">
<div class="syntax">filter(filterFunc)</div>
</div>

<h4>Parameters</h4>
<dl class="params">
<dt id="filter_filterFunc" class=""><a name="filter_filterFunc"><var>filterFunc</var></a></dt>
<dd class="">the callback function(item, index) to invoke for each item with the item as first argument and the 0-based index as second argument.
If the function returns false for an item, it is not included in the resulting list.</dd>
<dt id="filter_RETURN" class="returnValue inSyntax0"><a name="filter_RETURN"><var>(return value)</var></a></dt>
<dd class="inSyntax0">the new, filtered <a href='list.html'>list()</a></dd>
</dl>

<h4>Description</h4>
<div class="description"><p>Creates a new <a href='list.html'>Minified list()</a> that contains only those items approved by the given callback function. The function is
called once for each item.
If the callback function returns true, the item is shallow-copied in the new list, otherwise it will be removed.</p><p></p></div>

<div class="examples">
<h4>Example</h4>
<div class="example"><p>Creates a list of all unchecked checkboxes.
<pre>
var list = $('input').filter(function(item) {
    return item.getAttribute('type') == 'checkbox' &amp;&amp; item.checked;
});
</pre>
</p></div>
</div>


<p class="docFoot"><a href="index.html" class="backOverview">back to Overview</a></p>
</div>
<div id="toc"><h3>Functions</h3><ul><li><a href="dollar.html">$()</a>
</li><li><a href="dollardollar.html">$$()</a>
</li><li><a href="add.html">.add()</a>
</li><li><a href="addafter.html">.addAfter()</a>
</li><li><a href="addbefore.html">.addBefore()</a>
</li><li><a href="addfront.html">.addFront()</a>
</li><li><a href="animate.html">.animate()</a>
</li><li><a href="clone.html">.clone()</a>
</li><li><a href="collect.html">.collect()</a>
</li><li><a href="each.html">.each()</a>
</li><li><a href="fill.html">.fill()</a>
</li><li><a href="filter.html">.filter()</a>
</li><li><a href="find.html">.find()</a>
</li><li><a href="get.html">.get()</a>
</li><li><a href="hasclass.html">.hasClass()</a>
</li><li><a href="length.html">.length</a>
</li><li><a href="on.html">.on()</a>
</li><li><a href="remove.html">.remove()</a>
</li><li><a href="replace.html">.replace()</a>
</li><li><a href="set.html">.set()</a>
</li><li><a href="sub.html">.sub()</a>
</li><li><a href="toggle.html">.toggle()</a>
</li><li><a href="ee.html">EE()</a>
</li><li><a href="getcookie.html">MINI.getCookie()</a>
</li><li><a href="loop.html">MINI.loop()</a>
</li><li><a href="off.html">MINI.off()</a>
</li><li><a href="parsejson.html">MINI.parseJSON()</a>
</li><li><a href="ready.html">MINI.ready()</a>
</li><li><a href="request.html">MINI.request()</a>
</li><li><a href="setcookie.html">MINI.setCookie()</a>
</li><li><a href="tojson.html">MINI.toJSON()</a>
</li><li><a href="wait.html">MINI.wait()</a>
</li><li><a href="list.html">Minified Lists</a>
</li><li><a href="promise.html">Promise</a>
</li><li><a href="always.html">promise.always()</a>
</li><li><a href="error.html">promise.error()</a>
</li><li><a href="then.html">promise.then()</a>
</li><li><a href="require.html">require()</a>
</li></ul></div>

]]></main>
</page>
