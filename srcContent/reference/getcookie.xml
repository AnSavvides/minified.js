<?xml version="1.0" encoding="UTF-8"?>
<!--
   Auto-generated using docbuilder.js. Do not edit manually. 
-->
<page xmlns="http://tjansen.de/minifiedPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://tjansen.de/minifiedPage ../schemas/page.xsd ">
	<title>MINI.getCookie() - Minified.js</title>
	<section>reference</section>
	<externalCss>../css/reference.css</externalCss>
	<main><![CDATA[
<p><a href="index.html">back to Overview</a></p>
<h3><a name="doc-getcookie">MINI.getCookie()</a></h3>
<div class="summary">Tries to find the cookie with the given name and returns it.</div>

<h4>Syntax</h4>
<div class="syntaxVariant">
<div class="syntax">MINI.getCookie(name)</div>
<div class="syntax">MINI.getCookie(name, dontUnescape)</div>
</div>

<h4>Parameters</h4>
<dl class="params">
<dt id="getcookie_name" class=""><a name="getcookie_name">name</a></dt>
<dd class="">the name of the cookie. Should consist of alphanumeric characters, percentage, minus and underscore only, as it will not be escaped.
You may want to escape the name using encodeURIComponent() for all other characters.</dd>
<dt id="getcookie_dontUnescape" class=""><a name="getcookie_dontUnescape">dontUnescape</a></dt>
<dd class=""><span class="optional">optional</span> if set and true, the value will be returned unescaped (use this only if the value has been encoded
in a special way, and not with the JavaScript encode() method)</dd>
<dt id="getcookie_RETURN" class="returnValue inSyntax0 inSyntax1"><a name="getcookie_RETURN">return value</a></dt>
<dd class="inSyntax0 inSyntax1">the value of the cookie, or null if not found. Depending on the dontUnescape parameter, it may be unescape or not.</dd>
</dl>

<h4>Description</h4>
<div class="description">Tries to find the cookie with the given name and returns it.

</div>

<div class="examples">
<h4>Example</h4>
<div class="example">Reads the existing cookie 'numberOfVisits' and displays the number in the element 'myCounter':
<pre>
var visits = MINI.getCookie('numberOfVisits');
if (!visits)    // check whether cookie set. Null if not
    $('#myCounter').set('innerHML', 'Your first visit.');
else
    $('#myCounter').set('innerHTML', 'Visit No ' + visits);
</pre>
</div>
</div>


<p><a href="index.html">back to Overview</a></p>
<div id="toc"><a href="dollar.html">MINI()</a>
<a href="add.html">.add()</a>
<a href="addafter.html">.addAfter()</a>
<a href="addbefore.html">.addBefore()</a>
<a href="addfront.html">.addFront()</a>
<a href="animate.html">.animate()</a>
<a href="append.html">.append()</a>
<a href="clone.html">.clone()</a>
<a href="collect.html">.collect()</a>
<a href="each.html">.each()</a>
<a href="fill.html">.fill()</a>
<a href="filter.html">.filter()</a>
<a href="find.html">.find()</a>
<a href="get.html">.get()</a>
<a href="hasclass.html">.hasClass()</a>
<a href="length.html">.length</a>
<a href="offset.html">.offset()</a>
<a href="on.html">.on()</a>
<a href="prepend.html">.prepend()</a>
<a href="remove.html">.remove()</a>
<a href="replace.html">.replace()</a>
<a href="set.html">.set()</a>
<a href="sub.html">.sub()</a>
<a href="toggle.html">.toggle()</a>
<a href="el.html">EE()</a>
<a href="dollardollar.html">MINI.$$()</a>
<a href="getcookie.html">MINI.getCookie()</a>
<a href="loop.html">MINI.loop()</a>
<a href="off.html">MINI.off()</a>
<a href="parsejson.html">MINI.parseJSON()</a>
<a href="ready.html">MINI.ready()</a>
<a href="request.html">MINI.request()</a>
<a href="setcookie.html">MINI.setCookie()</a>
<a href="tojson.html">MINI.toJSON()</a>
<a href="always.html">promise.always()</a>
<a href="error.html">promise.error()</a>
<a href="then.html">promise.then()</a>
</div>
]]></main>
</page>
