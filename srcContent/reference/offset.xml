<?xml version="1.0" encoding="UTF-8"?>
<!--
   Auto-generated using docbuilder.js. Do not edit manually. 
-->
<page xmlns="http://tjansen.de/minifiedPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://tjansen.de/minifiedPage ../schemas/page.xsd ">
	<title>.offset() - Minified.js</title>
	<section>reference</section>
	<externalCss>../css/reference.css</externalCss>
	<main><![CDATA[
<p><a href="index.html">back to Overview</a></p>
<h3><a name="doc-offset">.offset()</a></h3>
<div class="summary">Returns the pixel page coordinates of the list's first element.</div>

<h4>Syntax</h4>
<div class="syntaxVariant">
<div class="syntax">MINI(selector).offset()</div>
</div>

<h4>Parameters</h4>
<dl class="params">
<dt id="offset_element" class=""><a name="offset_element">element</a></dt>
<dd class="">the element whose coordinates should be determined</dd>
<dt id="offset_RETURN" class="returnValue inSyntax0"><a name="offset_RETURN">return value</a></dt>
<dd class="inSyntax0">an object containing pixel coordinates in two properties 'x' and 'y'</dd>
</dl>

<h4>Description</h4>
<div class="description">Returns the pixel page coordinates of the list's first element. Page coordinates are the pixel coordinates within the document, with 0/0 being the upper left corner, independent of the user's
current view (which depends on the user's current scroll position and zoom level).

</div>

<div class="examples">
<h4>Example</h4>
<div class="example">Displays the position of the element with the id 'myElement' in the element 'resultElement':
<pre>
var pos = $('#myElement').offset();
$('#resultElement').set('innerHTML', '#myElement's position is left=' + pos.x + ' top=' + pos.y);
</pre>
</div>
</div>


<p><a href="index.html">back to Overview</a></p>
<div id="toc"><a href="dollar.html">MINI()</a>
<a href="add.html">.add()</a>
<a href="addafter.html">.addAfter()</a>
<a href="addbefore.html">.addBefore()</a>
<a href="addfront.html">.addFront()</a>
<a href="animate.html">.animate()</a>
<a href="append.html">.append()</a>
<a href="clone.html">.clone()</a>
<a href="collect.html">.collect()</a>
<a href="each.html">.each()</a>
<a href="fill.html">.fill()</a>
<a href="filter.html">.filter()</a>
<a href="find.html">.find()</a>
<a href="get.html">.get()</a>
<a href="hasclass.html">.hasClass()</a>
<a href="length.html">.length</a>
<a href="offset.html">.offset()</a>
<a href="on.html">.on()</a>
<a href="prepend.html">.prepend()</a>
<a href="remove.html">.remove()</a>
<a href="replace.html">.replace()</a>
<a href="set.html">.set()</a>
<a href="sub.html">.sub()</a>
<a href="toggle.html">.toggle()</a>
<a href="dollardollar.html">MINI.$$()</a>
<a href="el.html">MINI.el()</a>
<a href="getcookie.html">MINI.getCookie()</a>
<a href="loop.html">MINI.loop()</a>
<a href="off.html">MINI.off()</a>
<a href="parsejson.html">MINI.parseJSON()</a>
<a href="ready.html">MINI.ready()</a>
<a href="request.html">MINI.request()</a>
<a href="setcookie.html">MINI.setCookie()</a>
<a href="tojson.html">MINI.toJSON()</a>
<a href="always.html">promise.always()</a>
<a href="error.html">promise.error()</a>
<a href="then.html">promise.then()</a>
</div>
]]></main>
</page>
